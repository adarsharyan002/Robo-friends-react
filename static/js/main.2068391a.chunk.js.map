{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","container/App.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardsArray","map","users","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAmBeA,EAfH,SAACC,GACT,IAAOC,EAAiBD,EAAjBC,KAAKC,EAAYF,EAAZE,MAAMC,EAAMH,EAANG,GAClB,OACI,sBAAKC,UAAU,wDAAf,UACI,qBAAMC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,eAC1B,gCAGE,6BAAKF,IACH,4BAAIC,WCaDK,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAKTC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OAAO,cAAC,EAAD,CACNT,GAAIK,EAAOI,GAAGT,GACdF,KAAQO,EAAOI,GAAGX,KAClBC,MAAOM,EAAOI,GAAGV,OAHAU,MAKtB,OACG,8BAKAH,KCRQI,EAVG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKX,UAAU,MAAf,SAEK,uBAAOA,UAAU,mCAAmCY,KAAK,SAASC,YAAY,iBAAiBC,SAAUH,OCMvGI,EATD,SAACnB,GACX,OACI,qBAAKoB,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACAvB,EAAMwB,YCsBCC,E,kDAzBX,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IACD0B,MAAM,CACPC,UAAS,GAHC,E,qDAStB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAM5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,wDAEJG,KAAK9B,MAAMwB,a,GArBKQ,aCmEZC,E,kDAvDX,aAAc,IAAD,8BACT,gBAwBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACjB,YAAYqB,EAAMC,OAAOC,SAxBxC,EAAKX,MAAQ,CACTlB,OAAQ,GACRM,YAAY,IAJP,E,qDAUb,WAAoB,IAAD,OAEfwB,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UAEnBF,MAAK,SAAA5B,GACF,EAAKoB,SAAS,CAACvB,OAAOG,S,oBAc9B,WAAS,IAAD,OACE+B,EAAgBZ,KAAKJ,MAAMlB,OAAOmC,QAAO,SAAAnC,GAC3C,OAAOA,EAAOP,KAAK2C,cAAcC,SAAS,EAAKnB,MAAMZ,YAAY8B,kBAGrE,OAA+B,IAA5Bd,KAAKJ,MAAMlB,OAAOsC,OACV,yCAGX,sBAAK1C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWW,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UAAe,cAAC,EAAD,CAAU1B,OAAUkC,e,GA7CjCV,a,MCFlBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAGDC,SAASC,eAAe,W","file":"static/js/main.2068391a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Card= (props) => {\r\n    const {name,email,id} = props;\r\n    return(\r\n        <div className=' tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 '>\r\n            <img  alt=\"robots\" src={`https://robohash.org/${id} ?200x200`}/>  \r\n        <div>\r\n            {/* <h2>{props.name}</h2>\r\n            <p>{props.email}</p> */}\r\n          <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({robots}) => {\r\n  // if(true){\r\n  //   throw new Error('NOooooo!');\r\n  // }\r\n\r\n    const cardsArray = robots.map((users,i) => {\r\n        return <Card key={i}\r\n         id={robots[i].id} \r\n         name = {robots[i].name}\r\n         email={robots[i].email}/>\r\n    })\r\n    return(\r\n       <div>\r\n        {/* <Card id={robots[0].id} name = {robots[0].name} email={robots[0].email}/>\r\n        <Card id={robots[1].id} name = {robots[1].name} email={robots[1].email}/>\r\n        <Card id={robots[2].id} name = {robots[2].name} email={robots[2].email}/> */}\r\n\r\n      {cardsArray}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            \r\n             <input className='pa3 ba b--green bg-lightest-blue' type=\"search\" placeholder=\"search roborts\" onChange={searchChange}/>\r\n             \r\n             </div>\r\n       \r\n    );\r\n}\r\nexport default SearchBox;","import { div } from 'prelude-ls';\r\nimport React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n    return (\r\n        <div style={{overflow:'scroll',border:'5px solid black',height:'500px'}}>\r\n       {props.children}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n\r\n\r\ncomponentDidCatch(error,info) {\r\n    this.setState({hasError:true})\r\n\r\n\r\n}\r\n\r\n\r\nrender() {\r\n    if(this.state.hasError){\r\n        return <h1>OOOps.This is not good</h1>\r\n    }\r\n    return this.props.children\r\n\r\n}\r\n}\r\n\r\nexport default ErrorBoundry;","import { div } from 'prelude-ls';\r\nimport React ,{Component} from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundary from '../components/ErrorBoundry.js'\r\n\r\nconst state = {\r\n    robots:[],\r\n    searchfield:''\r\n}\r\n\r\nclass App extends Component  {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('check');\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\").then(response =>{\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({robots:users})\r\n            \r\n\r\n        });\r\n        \r\n\r\n\r\n    }\r\n\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield:event.target.value})\r\n       \r\n       \r\n    }\r\n    render(){\r\n        const filteredRobots= this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n\r\n        if(this.state.robots.length ===0){\r\n            return <h1>Loading</h1>\r\n        }else{\r\n    return(\r\n        <div className=\"tc\">\r\n            <h1>RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundary><CardList robots = {filteredRobots} /></ErrorBoundary>\r\n                \r\n            </Scroll>\r\n            \r\n            </div>\r\n\r\n        \r\n    );\r\n}\r\n}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App.js'\nimport 'tachyons';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode> \n   <App/>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}